SQL: DML запросы

  ==========  1  ==========

Создайте базу данных academy используя файл # academy_create.sql

Заполните таблицы базы данных academy тестовыми случайными данными. 
В помощь себе можете использовать сайт https://generatedata.com/generator или python-скрипт, использующий модуль random.

    При использовании автоматической генерации, задавайте правила и ограничения генерации данных так, чтобы записи в таблицах выглядели осмысленно.
    
        Например, номер группы может содержать несколько букв, после которых стоит несколько цифр — но вряд ли вперемешку. Аналогичено с номерами аудиторий. И так далее.
        
        Во время генерации значений внешних ключей учитывайте, сколько у вас есть строк (и значений соответствующего первичного ключа) в таблице, на которую ссылается внешний ключ.

Для удобства дальнейшей работы рекомендую записать по 10–40 строк в каждую таблицу.

Поместите все INSERT запросы в один файл с расширением .sql
Помните, что различные запросы в одном файле должны быть отделены друг от друга символом ;

Настоятельно рекомендую сгенерировать данные самостоятельно, используя описанные выше способы.
В случае возникновения проблем, можете воспользоваться файлом # academy_insert.sql — однако, имейте в виду, что данные в этом файле слабо связаны друг с другом, некоторые корректные по форме запросы могут возвращать пустые таблицы.

После внесения записей в таблицы, выведите полное содержимое каждой таблицы и убедитесь в корректности и связности данных.



  =========================

Запросы для каждой задачи помещаются в текущий каталог репозитория в виде отдельного SQL файла с именем, соответствующем номеру задачи.

В сервис Журнал отправляется сообщение о выполнении задания со ссылкой на репозиторий.

Преподаватель пишет комментарии и правки в коде задач и обновляет файлы в удалённом репозитории.
Проверяйте обновления в своём репозитории каждый день.